# -*- coding: utf-8 -*-
"""bright coffee shop

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X7HXddn4g76fYUlweuoJ5SbWgEcjKNFV

##Import Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""# ***Data Ingestion***"""

df=pd.read_excel('/content/drive/MyDrive/Colab Notebooks/bright coffee shop/Bright Coffee Shop Sales.xlsx')

display(df)

"""### ***Exploratory*** ***Analysis***"""

df.columns

df.dtypes

df.duplicated().sum()

df.info()

df.describe()

df.isnull().sum()

"""Analysing Key Metrics"""

df['month'] = df['transaction_date'].dt.to_period('M')
df['hour'] = pd.to_datetime(df['transaction_time'].astype(str)).dt.hour

monthly_sales = df.groupby('month')['transaction_qty'].sum()
print(monthly_sales)

top_products = df.groupby('product_detail')['transaction_qty'].sum().sort_values(ascending=False).head(10)
print(top_products)

sales_by_category = df.groupby('product_category')['transaction_qty'].sum()
print(sales_by_category)

busiest_hours = df.groupby('hour')['transaction_qty'].sum()
print(busiest_hours)

import matplotlib.pyplot as plt
import seaborn as sns

# Monthly sales
monthly_sales.plot(kind='bar', title='Monthly Sales', figsize=(10, 5))
plt.ylabel('Quantity Sold')
plt.show()

# Top products
top_products.plot(kind='barh', title='Top 10 Products', figsize=(10, 6))
plt.xlabel('Quantity Sold')
plt.show()

# Sales by hour
busiest_hours.plot(kind='line', title='Sales by Hour of Day', figsize=(10, 5))
plt.xlabel('Hour')
plt.ylabel('Quantity Sold')
plt.grid(True)
plt.show()

monthly_sales.plot(kind='bar', color='mediumseagreen', title='Total Sales per Month')
plt.ylabel('Total Sales ($)')
plt.xlabel('Month')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

category_sales = df.groupby('product_category')['total_sales'].sum().sort_values(ascending=False)
category_sales.plot(kind='bar', color='coral', title='Total Sales by Product Category')
plt.ylabel('Total Sales ($)')
plt.xlabel('Product Category')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

location_sales = df.groupby('store_location')['total_sales'].sum().sort_values(ascending=False)

location_sales.plot(kind='pie', autopct='%1.1f%%', title='Total Sales by Store Location')
plt.ylabel('')
plt.tight_layout()
plt.show()

product_sales = df.groupby('product_detail')['total_sales'].sum().sort_values(ascending=False).head(10)

product_sales.plot(kind='barh', color='slateblue', title='Top 10 Products by Sales')
plt.xlabel('Total Sales ($)')
plt.gca().invert_yaxis()
plt.tight_layout()
plt.show()